/**
 * Ê∂àÊÅØ‰∏≠ÂøÉÈ°µÈù¢ÁªÑ‰ª∂
 * Êï¥Âêà‰∫ÜÁßÅ‰ø°„ÄÅÈÄöÁü•„ÄÅ@ÊèêÂèäÂíåËØÑËÆ∫ÂäüËÉΩÁöÑÊ∂àÊÅØ‰∏≠ÂøÉ
 * ÊîØÊåÅÊ∂àÊÅØÊêúÁ¥¢„ÄÅÊ†áÁ≠æÈ°µÂàáÊç¢Á≠âÂäüËÉΩ
 */

import CommentsPage from '../component/CommentsPage'; // ËØÑËÆ∫È°µÈù¢ÁªÑ‰ª∂
import MentionsPage from '../component/MentionsPage'; // @ÊèêÂèäÈ°µÈù¢ÁªÑ‰ª∂
import NotificationsPage from '../component/NotificationsPage'; // ÈÄöÁü•È°µÈù¢ÁªÑ‰ª∂
import PrivateMessageItem from '../model/PrivateMessageItem'; // ÁßÅ‰ø°Êï∞ÊçÆÊ®°Âûã
// import PrivateMessageList from '../viewmodel/PrivateMessageList'; // ÁßÅ‰ø°ÂàóË°®ËßÜÂõæÊ®°Âûã
import { router } from '@kit.ArkUI'; // Ë∑ØÁî±ÁªÑ‰ª∂
import { BusinessError } from '@kit.BasicServicesKit'; // ‰∏öÂä°ÈîôËØØÂ§ÑÁêÜ
import { AvatarManager } from '../model/AvatarManager'; // Â§¥ÂÉèÁÆ°ÁêÜÂô®
import { PrivateMessageList } from '../viewmodel/PrivateMessageList';

/**
 * Ê∂àÊÅØ‰∏≠ÂøÉÈ°µÈù¢ÁªÑ‰ª∂
 * @Entry Ê†áËÆ∞‰∏∫ÂÖ•Âè£ÁªÑ‰ª∂
 * @Component Ê†áËÆ∞‰∏∫Ëá™ÂÆö‰πâÁªÑ‰ª∂
 */
@Entry
@Component
export default struct Messages {
  @State currentTab: string = 'private'; // ÂΩìÂâçÈÄâ‰∏≠ÁöÑÊ†áÁ≠æÈ°µÔºàprivate: ÁßÅ‰ø°, notice: ÈÄöÁü•, mention: @ÊèêÂèä, like: ËØÑËÆ∫Ôºâ
  @State searchText: string = ''; // ÊêúÁ¥¢Ê°ÜÊñáÊú¨ÂÜÖÂÆπ
  @State currentNav: string = 'message'; // ÂΩìÂâçÂØºËà™È°π
  @State isPressed: boolean = false; // ÊåâÈíÆÊåâÂéãÁä∂ÊÄÅ
  @State filteredMessages: PrivateMessageItem[] = PrivateMessageList; // ËøáÊª§ÂêéÁöÑÊ∂àÊÅØÂàóË°®

  /**
   * Ê†πÊçÆÊêúÁ¥¢ÊñáÊú¨ËøáÊª§Ê∂àÊÅØÂàóË°®
   * @param searchText - ÊêúÁ¥¢ÂÖ≥ÈîÆËØç
   */
  private filterMessages(searchText: string) {
    if (!searchText.trim()) {
      this.filteredMessages = PrivateMessageList; // ÊêúÁ¥¢ÊñáÊú¨‰∏∫Á©∫Êó∂ÊòæÁ§∫ÊâÄÊúâÊ∂àÊÅØ
      return;
    }
    
    const searchLower = searchText.toLowerCase();
    // Ê†πÊçÆÁî®Êà∑ÂêçÊàñÊ∂àÊÅØÂÜÖÂÆπËøõË°åËøáÊª§
    this.filteredMessages = PrivateMessageList.filter(item => 
      item.name.toLowerCase().includes(searchLower) || 
      item.msg.toLowerCase().includes(searchLower)
    );
  }

  /**
   * ÊûÑÂª∫Ê†áÁ≠æÈ°µÈ°π
   * @param label - Ê†áÁ≠æÊòæÁ§∫ÊñáÊú¨
   * @param tabName - Ê†áÁ≠æÊ†áËØÜÂêçÁß∞
   */
  @Builder
  buildTabItem(label: string, tabName: string) {
    Column() {
      Text(label)
        .fontSize(18)
        .fontWeight(800)
        .fontColor(this.currentTab === tabName ? '#FFFFFF' : '#999999') // ÈÄâ‰∏≠Áä∂ÊÄÅ‰ΩøÁî®ÁôΩËâ≤ÔºåÊú™ÈÄâ‰∏≠‰ΩøÁî®ÁÅ∞Ëâ≤

      // ÈÄâ‰∏≠Áä∂ÊÄÅ‰∏ãÊòæÁ§∫‰∏ãÂàíÁ∫ø
      if (this.currentTab === tabName) {
        Divider()
          .color('#FFFF')
          .strokeWidth(2)
          .width(24)
          .margin({ top: 4 })
      }
    }
    .height('100%')
    .justifyContent(FlexAlign.Center)
    .onClick(() => {
      this.currentTab = tabName; // ÁÇπÂáªÂàáÊç¢Ê†áÁ≠æÈ°µ
    })
  }

  /**
   * ÊûÑÂª∫È°µÈù¢UI
   * ÂåÖÂê´È°∂ÈÉ®ÂØºËà™Ê†è„ÄÅÊ†áÁ≠æÈ°µÂØºËà™„ÄÅÊêúÁ¥¢Ê†èÂíåÂÜÖÂÆπÂå∫Âüü
   */
  build() {
    Column() {
      // È°∂ÈÉ®ÂØºËà™Ê†è
      Row() {
        // ËøîÂõûÊåâÈíÆ
        Text('‚Üê')
          .fontSize(24)
          .fontColor('#fff')
          .margin({ left: 16 })
          .onClick(() => {
            router.pushUrl({ url: 'Discover/pages/Discover' }) // ÁÇπÂáªËøîÂõûÂèëÁé∞È°µ
              .then(() => console.info('push page success'))
              .catch((err: BusinessError) =>
              console.error(`pushUrl failed, code is ${err.code}, message is ${err.message}`)
              );
          })

        Blank().layoutWeight(1)

        // È°µÈù¢Ê†áÈ¢ò
        Text('Ê∂àÊÅØ')
          .fontSize(20)
          .fontColor('#fff')
          .fontWeight(FontWeight.Bold)
          .margin({ right: 16 })

        Blank().layoutWeight(1)

        // ÂàõÂª∫Ê∂àÊÅØÊåâÈíÆ
        Text('‚úçÔ∏è')
          .fontSize(20)
          .margin({ right: 16 })
      }
      .width('100%')
      .height(48)
      .alignItems(VerticalAlign.Center)
      .backgroundColor('#00000')

      // È°∂ÈÉ®Ê†áÁ≠æÈ°µÂØºËà™
      Row() {
        this.buildTabItem('ÁßÅ‰ø°', 'private')
        this.buildTabItem('ÈÄöÁü•', 'notice')
        this.buildTabItem('@Êàë', 'mention')
        this.buildTabItem('ËØÑËÆ∫', 'like')
      }
      .width('100%')
      .height(56)
      .justifyContent(FlexAlign.SpaceAround)
      .backgroundColor('#0000')

      // ÊêúÁ¥¢Ê†è
      Row() {
        Text('üîé') // ÊêúÁ¥¢ÂõæÊ†á
          .fontSize(20)
          .margin({ left: 12 })

        TextInput({ 
          placeholder: 'ÊêúÁ¥¢Áî®Êà∑ÂêçÊàñËÅäÂ§©ËÆ∞ÂΩï',
          text: this.searchText 
        })
          .placeholderFont({ size: 14 })
          .placeholderColor('#666666')
          .textAlign(TextAlign.Start)
          .height(36)
          .layoutWeight(1)
          .fontColor('#FFFF')
          .margin({ left: 8, right: 12 })
          .onChange((value: string) => {
            this.searchText = value;
            this.filterMessages(value); // ËæìÂÖ•Êó∂ÂÆûÊó∂ËøáÊª§Ê∂àÊÅØ
          })

        // Ê∏ÖÈô§ÊêúÁ¥¢ÊñáÊú¨ÊåâÈíÆ
        if (this.searchText) {
          Text('‚úï')
            .fontSize(16)
            .fontColor('#999999')
            .margin({ right: 12 })
            .onClick(() => {
              this.searchText = '';
              this.filterMessages('');
            })
        }
      }
      .borderRadius(18)
      .backgroundColor('#333333')
      .margin({ left: 12, right: 12, top: 8 })

      // ÂÜÖÂÆπÂå∫Âüü
      Column() {
        if (this.currentTab === 'private') {
          if (this.searchText && this.filteredMessages.length === 0) {
            // Êó†ÊêúÁ¥¢ÁªìÊûúÊèêÁ§∫
            Column() {
              Text('Êú™ÊâæÂà∞Áõ∏ÂÖ≥ËÅäÂ§©ËÆ∞ÂΩï')
                .fontSize(16)
                .fontColor('#999999')
                .margin({ top: 100 })
            }
            .width('100%')
            .height('100%')
          } else {
            // Ê∂àÊÅØÂàóË°®
            Scroll() {
              Column() {
                ForEach(this.filteredMessages, (item: PrivateMessageItem) => {
                  Row() {
                    // Áî®Êà∑Â§¥ÂÉè
                    Image(AvatarManager.getUserAvatar(item.id))
                      .width(48)
                      .height(48)
                      .borderRadius(24)
                      .margin({ left: 12, right: 12 })
                      .onClick(()=>{
                        router.pushUrl({url:"Messages/pages/ChatPage"}) // ÁÇπÂáªÂ§¥ÂÉèË∑≥ËΩ¨Âà∞ËÅäÂ§©È°µÈù¢
                      })

                    Column() {
                      // Áî®Êà∑ÂêçÂíåÊó∂Èó¥
                      Row() {
                        Text(item.name)
                          .fontSize(16)
                          .fontColor('#FFFF')
                          .layoutWeight(1)

                        Text(item.time)
                          .fontSize(12)
                          .fontColor('#999999')
                      }
                      .width('100%')

                      // Ê∂àÊÅØÂÜÖÂÆπÂíåÊú™ËØªÊ∂àÊÅØÊï∞
                      Row() {
                        Text(item.msg)
                          .fontSize(14)
                          .fontColor('#B2B2B2')
                          .maxLines(1)
                          .layoutWeight(1)

                        // ÊòæÁ§∫Êú™ËØªÊ∂àÊÅØÊï∞
                        if (item.unread > 0) {
                          Text(item.unread.toString())
                            .fontSize(12)
                            .fontColor('#FFFF')
                            .backgroundColor('#FF0000')
                            .borderRadius(8)
                            .padding({ left: 6, right: 6, top: 2, bottom: 2 })
                            .margin({ left: 8 })
                        }
                      }
                      .width('100%')
                      .margin({ top: 4 })
                    }
                    .layoutWeight(1)
                  }
                  .width('100%')
                  .height(72)
                  .border({ width: 0.5, color: '#333333' })
                  .padding({ top: 8, bottom: 8 })
                  .backgroundColor('#00000')
                })
              }
            }
            .width('100%')
          }
        } else if (this.currentTab === 'notice') {
          NotificationsPage() // ÊòæÁ§∫ÈÄöÁü•È°µÈù¢
        } else if (this.currentTab === 'mention') {
          MentionsPage() // ÊòæÁ§∫@ÊèêÂèäÈ°µÈù¢
        } else if (this.currentTab === 'like') {
          CommentsPage() // ÊòæÁ§∫ËØÑËÆ∫È°µÈù¢
        }
      }
      .width('100%')
      .padding({ top: 16 })
      .layoutWeight(1)
    }
    .width('100%')
    .height('100%')
    .backgroundColor(Color.Black)
  }
}